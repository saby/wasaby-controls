// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=arrows, hasGridStickyHeader=false, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=arrows, hasGridStickyHeader=false, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=arrows, hasGridStickyHeader=true, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=arrows, hasGridStickyHeader=true, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=scrollbar, hasGridStickyHeader=false, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=scrollbar, hasGridStickyHeader=false, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=scrollbar, hasGridStickyHeader=true, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=fixed, mode=scrollbar, hasGridStickyHeader=true, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_fixed controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=arrows, hasGridStickyHeader=false, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=arrows, hasGridStickyHeader=false, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px; display: none;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=arrows, hasGridStickyHeader=true, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=arrows, hasGridStickyHeader=true, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_arrows"
    style="width: 400px; display: none;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "arrows",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=scrollbar, hasGridStickyHeader=false, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=scrollbar, hasGridStickyHeader=false, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px; display: none;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "bottom"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=scrollbar, hasGridStickyHeader=true, isMobileScrolling=false 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/gridColumnScroll/render/view/BeforeItemsContent/NavigationComponentWrapper Рендер при различных значениях опций stickyColumnsCount и hasMultiSelectColumn. part=scrollable, mode=scrollbar, hasGridStickyHeader=true, isMobileScrolling=true 1`] = `
<DocumentFragment>
  <div
    class="js-controls-ColumnScrollReact_fixed js-controls-GridColumnScroll_fixed controls-GridReact__columnScroll__headerNavigation controls-GridReact__columnScroll__headerNavigation-part_scrollable controls-GridReact__columnScroll__headerNavigation-mode_scrollbar"
    style="width: 400px; display: none;"
  >
    <div
      data-qa="mocked_ColumnScrollReact__NavigationComponent"
    >
      <div
        data-qa="mocked_ColumnScrollReact__NavigationComponent"
      >
        {
    "mode": "scrollbar",
    "scrollBarValign": "center"
}
      </div>
    </div>
  </div>
</DocumentFragment>
`;
