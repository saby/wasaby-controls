// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedFromInvisibleToVisible, rightEdgeState=AnimatedInvisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": false,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedFromVisibleToInvisible, rightEdgeState=AnimatedInvisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": false,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedInvisible, rightEdgeState=AnimatedFromInvisibleToVisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": false,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedInvisible, rightEdgeState=AnimatedFromVisibleToInvisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": false,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedInvisible, rightEdgeState=AnimatedInvisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=AnimatedInvisible, rightEdgeState=AnimatedInvisible 2`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=Invisible, rightEdgeState=Invisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=Invisible, rightEdgeState=Visible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": true,
    "isRightEnabled": false,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. should pass right props isLeftEnabled and isRightEnabled, depends on context props leftEdgeState and rightEdgeState. leftEdgeState=Visible, rightEdgeState=Invisible 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": false,
    "isRightEnabled": true,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. snapshots with different prop[mode]. mode=arrows 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ArrowButtonsNavigationComponent"
  >
    <div
      data-qa="mocked_arrows_props"
    >
      {
    "isLeftEnabled": false,
    "isRightEnabled": false,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123"
}
    </div>
    <div
      data-qa="mocked_arrow_left"
    />
    <div
      data-qa="mocked_arrow_right"
    />
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. snapshots with different prop[mode]. mode=scrollbar 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ScrollbarNavigationComponent"
  >
    {
    "readOnly": false,
    "position": 20.124,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123",
    "viewPortWidth": 600,
    "contentWidth": 1600,
    "startFixedWidth": 300,
    "endFixedWidth": 0
}
  </div>
</DocumentFragment>
`;

exports[`ControlsUnit/columnScrollReact/NavigationComponent with context and consumer. snapshots with different prop[mode]. mode=undefined 1`] = `
<DocumentFragment>
  <div
    data-qa="mocked_ScrollbarNavigationComponent"
  >
    {
    "readOnly": false,
    "position": 20.124,
    "className": "js-controls-ColumnScrollReact_notDragScrollable_guid123",
    "viewPortWidth": 600,
    "contentWidth": 1600,
    "startFixedWidth": 300,
    "endFixedWidth": 0
}
  </div>
</DocumentFragment>
`;
