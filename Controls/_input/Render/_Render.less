.controls-Render {
   contain: style;
   position: relative;
   display: inline-block;
   box-sizing: border-box;
   border-style: var(--border-style_inputText);
   border-width: 0;
}

.controls-Render__wrapper_footer {
   flex-wrap: wrap;
}

.controls-Render_border-top {
   border-top-width: var(--border-thickness);
   border-top-color: var(--border-color);
}

.controls-Render_border-bottom {
   border-bottom-width: var(--border-thickness);
}

.controls-Render_border-top-empty {
   padding-top: var(--border-thickness);
}

.controls-Render_border-bottom-empty {
   padding-bottom: var(--border-thickness);
}

/**
 * https://github.com/philipwalton/flexbugs#flexbug-6
 */
.controls-Render__field {
   flex-shrink: 1;
   flex-grow: 1;
}

/**
 * Если задан placeholder и он строка, то задаем z-index. Это нужно для того, чтобы каретка отображалась над текстом
 */
.controls-Render__field_zIndex {
   z-index: 0;
}

/**
 * In ie11, container sizes are ignored if it can be compressed. Specify explicitly not to compress the container.
 */
.controls-Render__beforeField,
.controls-Render__afterField {
   flex-shrink: 0;
}

.controls-Render_multiline {
   height: auto;
}

/**
 * Problem: The container in IE does not stretch the content.
 * Fix: Use overflow-y: auto.
 * Remark: Not use min-height to avoid crossing, because the parent can redefine.
 */
.ws-is-ie .controls-Render_multiline {
   overflow-y: auto;
}

.controls-Render__wrapper {
   width: 100%;
   height: 100%;
   max-height: inherit;

   /**
    * Use inline-flex, that would be in ie not to break the baseline in due to overflow inside the container.
    */
   display: inline-flex;
   align-items: baseline;
}

.controls-Render__baseline {
   height: 100%;
   display: flex;
   user-select: none;
   align-items: center;
}

.controls-Render__fullHeight {
   height: 100%;
}

.controls-Render__placeholder {
   color: var(--placeholder-color_inputText);
}

.controls-Render__placeholder_overflow {
   .text-overflow();
}

.controls-Render_background-contrast.controls-Render_state-valid {
   background-color: var(--background-color_inputText);
}

.controls-Render_state-valid {
   border-style: var(--border-style_inputText);
   border-bottom-color: var(--unaccented_border-color);
}

.controls-Render_background-contrast.controls-Render_state-invalidAccent {
   background-color: var(--invalid_focus_background-color);
}

.controls-Render_state-invalidAccent {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_background-contrast.controls-Render_state-invalid {
   background-color: var(--invalid_background-color_inputText);
}

.controls-Render_state-invalid {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_background-contrast.controls-Render_state-success {
   background-color: var(--background-color_inputText);
}

.controls-Render_state-success {
   border-color: var(--success_border-color);
}

.controls-Render_background-contrast.controls-Render_state-secondary {
   background-color: var(--background-color_inputText);
}

.controls-Render_state-secondary {
   border-color: var(--secondary_border-color);
}

.controls-Render_background-contrast.controls-Render_state-warning {
   background-color: var(--background-color_inputText);
}

.controls-Render_state-warning {
   border-color: var(--warning_border-color);
}

.controls-Render_background-contrast.controls-Render_state-readonly {
   background-color: var(--readonly_background-color_inputText);
}

.controls-Render_state-readonly {
   border-bottom-color: var(--readonly_border-color);
}

.controls-Render_background-contrast.controls-Render_state-readonly-text-multiline,
.controls-Render_background-contrast.controls-Render_state-readonly-field-multiline {
   background-color: var(--readonly_background-color_inputText);
}

.controls-Render_state-readonly-text-multiline {
   border-color: transparent;
}

.controls-Render_state-readonly-field-multiline {
   border-bottom-color: var(--readonly_border-color);
}

/**
 * Do not use a selector enumeration if at least one uses focus-within.
 * They will not apply!!!
 */
.controls-Render_background-contrast.controls-Render_state-valid:focus-within {
   background-color: var(--background-color_focus_inputText);
}

.controls-Render_state-valid:focus-within {
   border-style: var(--border-style_focus_inputText);
   border-bottom-color: var(--unaccented_hover_border-color);
}

.controls-Render_background-contrast.controls-Render_state-invalid:focus-within {
   background-color: var(--background-color_focus_inputText);
}

.controls-Render_state-invalid:focus-within {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_background-contrast.controls-Render_state-valid-active {
   background-color: var(--background-color_focus_inputText);
}

.controls-Render_state-valid-active {
   border-style: var(--border-style_focus_inputText);
   border-bottom-color: var(--unaccented_hover_border-color);
}

.controls-Render_background-contrast.controls-Render_state-invalid-active {
   background-color: var(--background-color_focus_inputText);
}

.controls-Render_state-invalid-active {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_state-invalidAccent-active {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_background-contrast.controls-Render_state-invalidAccent-active {
   background-color: var(--invalid_focus_background-color);
}

.controls-Render_background-contrast.controls-Render_state-invalidAccent-active:focus-within {
   background-color: var(--invalid_focus_background-color);
}

.controls-Render_state-invalidAccent-active:focus-within {
   border-style: var(--invalid_border-style_inputText);
   border-color: var(--invalid_border-color);
}

.controls-Render_textAlign {
   @variants: right, left, center;
   .for(@variants, {
      &-@{_item} {
         text-align: @_item;
      }
   });
}

.controls-Render-focused-item:focus-within {
   transition: border-color 0.5s;
   border-color: var(--focused_border-color);
}

.controls-Render_borderRadius {
   border-radius: var(--border-radius_default_inputText);
}

.controls-Render_tag_padding-right {
   right: calc(var(--offset_2xs) * -1);
}

.ws-is-hover {
   .controls-Render_background-contrast.controls-Render_state-valid:hover {
      background-color: var(--background-color_hover_inputText);
   }

   .controls-Render_state-valid:hover {
      border-style: var(--border-style_hover_inputText);
      border-bottom-color: var(--unaccented_hover_border-color);
   }

   .controls-Render_state-invalidAccent:hover {
      border-style: var(--invalid_border-style_inputText);
   }

   .controls-Render_state-invalid:hover {
      border-style: var(--invalid_border-style_inputText);
   }

   .controls-Render.controls-Render-focused-item:focus-within {
      border-color: var(--focused_border-color);
   }
}

//fontsize
.controls-fontsize-xs.controls-Render-fontsize-xs {
   font-size: var(--font-size_xs_input);
}

.controls-fontsize-s.controls-Render-fontsize-s {
   font-size: var(--font-size_s_input);
}

.controls-fontsize-m.controls-Render-fontsize-m {
   font-size: var(--font-size_m_input);
}

.controls-fontsize-l.controls-Render-fontsize-l {
   font-size: var(--font-size_l);
}

.controls-fontsize-xl.controls-Render-fontsize-xl {
   font-size: var(--font-size_xl);
}

.controls-fontsize-2xl.controls-Render-fontsize-2xl {
   font-size: var(--font-size_2xl);
}

.controls-fontsize-3xl.controls-Render-fontsize-3xl {
   font-size: var(--font-size_3xl);
}

.controls-fontsize-4xl.controls-Render-fontsize-4xl {
   font-size: var(--font-size_4xl);
}

.controls-fontsize-5xl.controls-Render-fontsize-5xl {
   font-size: var(--font-size_5xl);
}

.controls-inlineheight-xs.controls-Render-inlineheight-xs {
   height: var(--inline_height_xs);
}

.controls-inlineheight-s.controls-Render-inlineheight-s {
   height: var(--inline_height_s);
}

.controls-inlineheight-m.controls-Render-inlineheight-m {
   height: var(--inline_height_m);
}

.controls-inlineheight-l.controls-Render-inlineheight-l {
   height: var(--inline_height_l);
}

.controls-inlineheight-xl.controls-Render-inlineheight-xl {
   height: var(--inline_height_xl);
}

.controls-inlineheight-2xl.controls-Render-inlineheight-2xl {
   height: var(--inline_height_2xl);
}

.controls-inlineheight-default.controls-Render-inlineheight-default {
   height: var(--inline_height_m);
}

.controls-inlineheight-auto {
   height: auto;
}
