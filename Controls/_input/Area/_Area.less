.controls-Area__fieldWrapper {
   z-index: 1;
   height: auto;
   position: relative;
   word-wrap: break-word;
   white-space: pre-wrap;
   text-decoration: inherit;
}

.controls-Area__field_readOnly {
   overflow: hidden;
}

.controls-Area__realField {
   top: 0;
   left: 0;
   overflow: hidden;
   position: absolute;
}

.controls-Area__scroll {
   max-height: inherit;
   text-decoration: inherit;

   .controls-Scroll-ContainerBase,
   .controls-Scroll-ContainerBase__content {
      text-decoration: inherit;
   }
}

/**
 * In IE <textarea> the height of the content is always 1px larger than the height of the container.
 * Because of this, after the input occurs under the native scroll to the end. Visually, the text jumps.
 * The solution is to equalize the height of the container with the height of the content.
 */
.ws-is-ie .controls-Area__realField {
   height: calc(100% + 1px);
}

.controls-Area__wrapURLs_container {
   max-width: 100%;
   display: inline-flex;
}

.controls-Area__wrapURLs {
   flex-shrink: 1;
   min-width: 1px;
}

.controls-Area__emptySymbol {
   user-select: none;
}

.controls-Area__fakeField {
   visibility: hidden;
   user-select: none;
}

.controls-Area__footer {
   flex-grow: 1;
}

/**
 * When using line-height: normal, the row height in Firefox differs from the row height in other browsers.
 * This behavior is independent of the font. Therefore, you must specify the value explicitly.
 */
.controls-Area_line-height {
   /* stylelint-disable-next-line unit-no-unknown */
   @variants: xs, s, m, l, xl, 2xl, 3xl, 4xl, 5xl, 6xl, 7xl, 8xl;

   .for(@variants, {
      &_@{_item} {
         line-height: ~'var(--line-height_@{_item}_inputArea)';
      }
   });
}

.controls-Area__field_margin-xs {
   margin: var(--padding-vertical_inputArea) var(--padding-horizontal_inputText) 0
      var(--padding-horizontal_inputText);
   // Для нижнего отступа используем padding потому что в firefox, в отличии от других браузеров,
   // margin не добавляет scrollHeight.
   padding-bottom: var(--padding-vertical_inputArea);
}

.controls-Area__field_margin-null {
   margin: var(--padding-vertical_inputArea) 0;
}

.ws-is-firefox .controls-Area__field_margin {
   /**
    * In firefox, the text baseline is 1px higher than the standard. Compensate for this by reducing the indentation between the text and the upper border by 1px.
    * To ensure that the height is not changed let's increase the indentation between the text and the bottom border by 1px.
    * Presumably the problem is in the font. Error written https://online.sbis.ru/opendoc.html?guid=1e389bc5-8be7-4394-abdd-231e3ec040a8
    */
   margin: calc(var(--padding-vertical_inputArea) - 1) var(--padding-horizontal_inputText)
      calc(var(--padding-vertical_inputArea) + 1) var(--padding-horizontal_inputText);
}

// On the iPad, in safari and chrome, textarea has indispensable 3px padding, at left and right sides.
// https://stackoverflow.com/questions/6890149/remove-3-pixels-in-ios-webkit-textarea
// To compensate them, we should move textarea to the left by 3px and increase it's width to 6px
.controls-Area__realField_fixTextPosition {
   margin-left: -3px;
   width: ~'calc(100% + 6px)';
}
