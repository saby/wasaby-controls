<!-- todo переделать после перевода на реакт. Wrapper должен использоваться только когда есть эти значения. Если делать сейчас, то получим деградацию по трафику -->
<Controls.themes:Wrapper variables="{{_options.themeVariables}}" attr:class="{{_options.themeClassName}}">
    <Controls.Pending:ContextProvider registerPending="{{ _registerPendingHandler }}"
                                      finishPendingOperations="{{ _finishPendingOperationsHandler }}"
                                      cancelFinishingPending="{{ _cancelFinishingPendingHandler }}">
        <Controls.LoadingIndicator:ContextProvider showIndicator="{{ _showIndicatorHandlerContext }}">
            <Controls.popupTemplate:ContextProvider close="{{ _close }}"
                                                     sendResult="{{ _sendResultContext }}"
                                                      maximized="{{ _maximizedContext }}">
                <div class="controls-Popup ws-float-area-show-complete {{_options.item.popupOptions.className}}
                {{ _getHiddenClass(_options.item) }} {{_options.item.position.zoom !== undefined ? 'controls-Zoom'}}
                {{_applyScrollOnBodyClasses ? 'controls-Popup__IosFix'}}"
                     on:animationend="_animated()"
                     on:transitionend="_animated()"
                     on:keyup="_keyUp()"
                     popupkey="{{ _options.id }}"
                     on:keydown="_keyDown()"
                     style="position: {{_getPositionStyle(_options.item)}};
                            left: {{_options.item.position.left === undefined ? 'auto' : _options.item.position.left + 'px'}};
                            right: {{_options.item.position.right === undefined ? 'auto' : _options.item.position.right + 'px'}};
                            top: {{_options.item.position.top === undefined ? 'auto': _options.item.position.top + 'px'}};
                            bottom: {{_options.item.position.bottom === undefined ? 'auto': _options.item.position.bottom + 'px'}};
                            z-index: {{_options.item.currentZIndex }};
                            width: {{_getStylePositionSize(_options.item.position.width === 'undefined' ? 'auto' : _options.item.position.width)}};
                            max-width: {{_getStylePositionSize(_options.item.position.maxWidth) }};
                            min-width: {{_getStylePositionSize(_options.item.position.minWidth)}};
                            max-height: {{_getStylePositionSize(_options.item.position.maxHeight)}};
                            min-height: {{_getStylePositionSize(_options.item.position.minHeight)}};
                            height: {{_getHeight(_options.item)}};
                            margin: {{_options.item.position.margin !== undefined ? _options.item.position.margin + 'px'}};
                            zoom: {{_options.item.position.zoom}};
"
                     templatename="{{ _options.templateOptions.pageTemplate || _compatibleTemplateName}}"
                     template="{{ _stringTemplate ? _options.template}}">
                    <ws:partial
                            attr:class="controls_popupTemplate_theme-{{_options.theme}}
                        controls-Popup__template {{_options.position.height ? 'controls-Popup__template-height'}}"
                            template="{{_options.content}}"
                            _prefetchData="{{_prefetchData || _options.prefetchData}}"
                            _isPrefetchDataMode="{{_isPrefetchDataMode}}"
                            scope="{{_options}}"
                            style=""
                            opener="{{null}}"
                            __key="{{_options.id}}_content"
                            name="{{_options.id}}_content"
                            on:sendResult="_sendResult()"
                            on:close="_close()"
                            on:popupDragEnd="_popupDragEnd()"
                            on:popupDragStart="_popupDragStart()"
                            on:popupMovingSize="_popupMovingSize()"
                            on:mouseenter="_popupMouseEnter()"
                            on:mouseleave="_popupMouseLeave()"
                            on:maximized="_maximized()"
                            on:fullscreen="_fullscreen()"
                            on:register="_registerHandler()"
                            on:unregister="_unregisterHandler()"
                            on:controlResize="_controlResizeHandler()"
                            on:showIndicator="_showIndicatorHandler()"
                            on:registerPending="_registerPendingEventHandler()"
                            on:cancelFinishingPending="_cancelFinishingPendingEventHandler()"
                            on:finishPendingOperations="_finishPendingOperationsHandler()" />

                </div>
            </Controls.popupTemplate:ContextProvider>
        </Controls.LoadingIndicator:ContextProvider>
    </Controls.Pending:ContextProvider>
</Controls.themes:Wrapper>
