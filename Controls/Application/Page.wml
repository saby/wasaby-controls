<Controls.scroll:ScrollContextProvider pagingVisible="{{ _options.pagingVisible }}">
  <Controls.Pending:ContextProvider registerPending="{{ _registerPendingHandler }}"
                                    finishPendingOperations="{{ _finishPendingHandler }}"
                                    cancelFinishingPending="{{ _cancelFinishingPendingHandler }}">
    <Controls.LoadingIndicator:ContextProvider showIndicator="{{ LoadingIndicator._showHandler }}"
                                               hideIndicator="{{ LoadingIndicator._hideHandler }}">
      <div class="bodyContent"
           on:scroll="_scrollPage()"
           on:resize="_resizePage()"
           on:register="_registerHandler()"
           on:unregister="_unregisterHandler()"
           on:mousemove="_mousemovePage()"
           on:touchmove="_touchmovePage()"
           on:touchend="_touchendPage()"
           on:touchstart="_touchStartPage()"
           on:mousedown="_mousedownPage()"
           on:keyPress="_keyPressHandler()"
           on:keydown="_keyDownHandler()"
           on:mouseup="_mouseupPage()"
           on:mouseleave="_mouseleavePage()"
           on:showIndicator="LoadingIndicator._showHandler()"
           on:hideIndicator="LoadingIndicator._hideHandler()"
           on:suggestStateChanged="_suggestStateChangedHandler()"

           on:serviceError="_openDialogHandler()"
           on:openInfoBox="_openInfoBoxHandler()"
           on:closeInfoBox="_closeInfoBoxHandler()"
           on:forceCloseInfoBox="_forceCloseInfoBoxHandler()"
           on:openPreviewer="_openPreviewerHandler()"
           on:cancelPreviewer="_cancelPreviewerHandler()"
           on:isPreviewerOpened="_isPreviewerOpenedHandler()"
           on:closePreviewer="_closePreviewerHandler()"

           on:workspaceResize="_workspaceResizeHandler()"
           on:pageScrolled="_popupEventHandler('pageScrolled')"

           on:registerPending="_registerPendingHandler()"
           on:finishPendingOperations="_finishPendingHandler()"
           on:cancelFinishingPending="_cancelFinishingPendingHandler()"

           on:_updateDraggingTemplate="_updateDraggingTemplate()"
           on:_removeDraggingTemplate="_removeDraggingTemplate()"
           on:_documentDragStart="_documentDragStart()"
           on:_documentDragEnd="_documentDragEnd()">
        <!-- In case of using application in html.tmpl there will not be content option -->
        <ws:if data="{{!_options.builder}}">
          <Controls.popup:Container attr:id="popup"
                                    eventHandler="{{content._managerEventHandler}}"/>
          <ws:partial
                  attr:class="bodyContent__zIndex-context"
                  template="{{ _options.content }}"
                  scope="{{ templateConfig }}" />
          <Controls.LoadingIndicator name="LoadingIndicator" mainIndicator="{{true}}" isGlobal="{{true}}">
            <div></div>
          </Controls.LoadingIndicator>
        </ws:if>
      </div>
    </Controls.LoadingIndicator:ContextProvider>
  </Controls.Pending:ContextProvider>
</Controls.scroll:ScrollContextProvider>
